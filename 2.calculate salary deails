class Employee {
    private String name;
    private int employeeID;

    public Employee(String name, int employeeID) {
        this.name = name;
        this.employeeID = employeeID;
    }

    public double calculateSalary() {
        return 50000; // Basic salary for all employees is $50,000
    }

    public String toString() {
        return "Name: " + name + "\nEmployee ID: " + employeeID + "\nBasic Salary: $" + calculateSalary();
    }
}

class Manager extends Employee {
    private double bonusPercentage;

    public Manager(String name, int employeeID, double bonusPercentage) {
        super(name, employeeID);
        this.bonusPercentage = bonusPercentage;
    }

    @Override
    public double calculateSalary() {
        // Override to include bonus for managers
        double basicSalary = super.calculateSalary();
        return basicSalary + (basicSalary * bonusPercentage / 100);
    }

    public String toString() {
        return super.toString() + "\nBonus Percentage: " + bonusPercentage + "%";
    }
}

class Developer extends Employee {
    private String programmingLanguage;

    public Developer(String name, int employeeID, String programmingLanguage) {
        super(name, employeeID);
        this.programmingLanguage = programmingLanguage;
    }

    @Override
    public double calculateSalary() {
        // Override to include extra allowance for developers
        return super.calculateSalary() + 10000; // Extra allowance for developers is $10,000
    }

    public String toString() {
        return super.toString() + "\nProgramming Language: " + programmingLanguage;
    }
}

public class EmployeeHierarchy {
    public static void main(String[] args) {
        Manager manager = new Manager("John Manager", 101, 15.0);
        Developer developer = new Developer("Alice Developer", 201, "Java");

        System.out.println("Manager Details:\n" + manager + "\n\n");
        System.out.println("Developer Details:\n" + developer);
    }
}






